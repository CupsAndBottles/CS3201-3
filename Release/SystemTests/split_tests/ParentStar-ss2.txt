1 - PARENT*-boolean: fixed-fixed (while stmt)

Select BOOLEAN such that Parent*(27, 29)
true
5000
2 - PARENT*-stmt: fixed-fixed (nested under while stmt)
stmt s;
Select s such that Parent*(27, 30)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
3 - PARENT*-boolean: fixed-fixed (if stmt, if block)

Select BOOLEAN such that Parent*(34, 36)
true
5000
4 - PARENT*-boolean: fixed-fixed (if stmt, else block)

Select BOOLEAN such that Parent*(33, 39)
true
5000
5 - PARENT*-stmt: fixed-fixed (nested under if stmt)
stmt s;
Select s such that Parent*(33, 39)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
6 - PARENT*-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2)
4 5, 4 6, 4 7, 4 8, 4 9, 4 10, 4 11, 4 12, 4 13, 4 14, 4 15, 4 16, 4 17, 4 18, 4 19, 4 20, 4 21, 4 22, 4 23, 6 7, 6 8, 6 9, 6 10, 6 11, 6 12, 6 13, 8 9, 11 12, 14 15, 14 16, 14 17, 14 18, 14 19, 14 20, 14 21, 14 22, 14 23, 19 20, 19 21, 19 22, 19 23, 21 22, 27 28, 27 29, 27 30, 28 29, 28 30, 33 34, 33 35, 33 36, 33 37, 33 38, 33 39, 33 40, 34 35, 34 36, 34 37, 34 38, 34 39, 35 36, 35 37, 35 38, 36 37
5000
7 - PARENT*-assign: syn-syn
stmt s; assign a;
Select a such that Parent*(s, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
8 - PARENT*-while: syn-syn
while w1, w2;
Select w1 such that Parent*(w1, w2)
4, 14
5000
9 - PARENT*-if: syn-syn
stmt s; if i;
Select i such that Parent*(i, s)
6, 19, 28, 33, 34, 35
5000
10 - PARENT*-call: syn-syn
stmt s; call c;
Select c such that Parent*(s, c)
13, 29
5000
11 - PARENT*-boolean: generic-generic

Select BOOLEAN such that Parent*(_, _)
true
5000
12 - PARENT*-assign: fixed-syn (while stmt)
assign a;
Select a such that Parent*(14, a)
15, 16, 17, 18, 20, 22, 23
5000
13 - PARENT*-stmt: fixed-syn (if stmt)
stmt s;
Select s such that Parent*(35, s)
36, 37, 38
5000
14 - PARENT*-stmt: syn-fixed
stmt s;
Select s such that Parent*(s, 19)
4, 14
5000
15 - PARENT*-while: syn-fixed
while w;
Select w such that Parent*(w, 37)
36
5000
16 - PARENT*-if: syn-fixed
if i;
Select i such that Parent*(i, 35)
33, 34
5000
17 - PARENT*-boolean: fixed-generic

Select BOOLEAN such that Parent*(28, _)
true
5000
18 - PARENT*-boolean: generic-fixed

Select BOOLEAN such that Parent*(_, 28)
true
5000
19 - PARENT*-assign: syn-generic
assign a;
Select a such that Parent*(a, _)
none
5000
20 - PARENT*-while: syn-generic
while w;
Select w such that Parent*(w, _)
4, 8, 11, 14, 21, 27, 36
5000
21 - PARENT*-if: syn-generic
if i;
Select i such that Parent*(i, _)
6, 19, 28, 33, 34, 35
5000
22 - PARENT*-stmt: generic-syn
stmt s;
Select s such that Parent*(_, s)
5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40
5000
23 - PARENT*-assign: generic-syn
assign a;
Select a such that Parent*(_, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
24 - PARENT*-while: generic-syn
while w;
Select w such that Parent*(_, w)
8, 11, 14, 21, 36
5000
25 - PARENT*-if: generic-syn
if i;
Select i such that Parent*(_, i)
6, 19, 28, 34, 35
5000
26 - PARENT*-call: generic-syn
call c;
Select c such that Parent*(_, c)
13, 29
5000
27 - PARENT*-while: pattern-left defined
while w;
Select w such that Parent*(w, _) pattern w("how", _)
27
5000
28 - PARENT*-while: pattern-left defined synonym
while w; variable v;
Select w such that Parent*(35, w) pattern w(v, _)
36
5000
29 - PARENT*-if: pattern-left defined
if i;
Select i such that Parent*(i, 34) pattern i("keyboard", _, _)
none
5000
30 - PARENT*-if: pattern-left defined synonym
if i; variable v;
Select v such that Parent*(i, 21) pattern i(v, _, _)
a
5000
31 - PARENT*: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Parent*(28, 29) and Parent*(35, 36)
true
5000
32 - PARENT*: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2) and Parent*(s2, s1)
none
5000
33 - PARENT*: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Parent*(33, s) and Parent*(34, s)
35, 36, 37, 38, 39
5000
34 - PARENT*: 2 clauses (similar) - syn-fixed, syn-fixed
while w;
Select w such that Parent*(14, w) and Parent*(i, 29)
none
5000
35 - PARENT*: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Parent*(14, _) and Parent*(28, _)
true
5000
36 - PARENT*: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s;
Select s such that Parent*(_, 30) and Parent*(_, 34)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
37 - PARENT*: 2 clauses (similar) - syn-generic, syn-generic
while w; if i;
Select <i,w> such that Parent*(w, _) and Parent*(i, _)
6 4, 6 8, 6 11, 6 14, 6 21, 6 27, 6 36, 19 4, 19 8, 19 11, 19 14, 19 21, 19 27, 19 36, 28 4, 28 8, 28 11, 28 14, 28 21, 28 27, 28 36, 33 4, 33 8, 33 11, 33 14, 33 21, 33 27, 33 36, 34 4, 34 8, 34 11, 34 14, 34 21, 34 27, 34 36, 35 4, 35 8, 35 11, 35 14, 35 21, 35 27, 35 36
5000
38 - PARENT*: 2 clauses (similar) - generic-syn, generic-syn
stmt s; if i;
Select i such that Parent*(_, s) and Parent*(_, i)
6, 19, 28, 34, 35
5000
39 - PARENT*: 2 clauses (mixed) - fixed-fixed, fixed-syn
stmt s;
Select s such that Parent*(34, 35) and Parent*(28, s)
29, 30
5000
40 - PARENT*: 2 clauses (mixed) - syn-syn, syn-fixed
stmt s1, s2;
Select <s1,s2> such that Parent*(s1, s2) and Parent*(s1, 30)
27 28, 27 29, 27 30, 28 29, 28 30
5000
41 - PARENT*: 2 clauses (mixed) - generic-generic, fixed-generic
while w;
Select w such that Parent*(_, _) and Parent*(33, _)
4, 8, 11, 14, 21, 27, 36
5000
42 - PARENT*: 2 clauses (mixed) - fixed-syn, generic-fixed
assign a;
Select a such that Parent*(19, a) and Parent*(_, 28)
20, 22, 23
5000
43 - PARENT*: 2 clauses (mixed) - syn-fixed, syn-generic
if i; assign a;
Select i such that Parent*(i, 22) and Parent*(a, _)
none
5000
44 - PARENT*: 2 clauses (mixed) - fixed-generic, generic-syn

Select BOOLEAN such that Parent*(28, _) and Parent*(_, 28)
true
5000
45 - PARENT*: 2 clauses (mixed) - generic-fixed, syn-generic
stmt s;
Select s such that Parent*(_, 38) and Parent*(s, _)
4, 6, 8, 11, 14, 19, 21, 27, 28, 33, 34, 35, 36
5000
46 - PARENT*: 2 clauses (mixed) - syn-generic, generic-syn
if i;
Select i such that Parent*(i, _) and Parent*(_, i)
6, 19, 28, 34, 35
5000
47 - PARENT*: 2 clauses (mixed) - generic-fixed, generic-syn
assign a;
Select a such that Parent*(_, 23) and Parent*(_, a)
5, 7, 9, 10, 12, 15, 16, 17, 18, 20, 22, 23, 30, 37, 38, 39, 40
5000
48 - PARENT*: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Parent*(28, a)
30
5000
49 - PARENT*: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Parent*(27, a)
30
5000
50 - PARENT*: stmt# - with clause (has results)
while w;
Select w such that Parent*(w, _) with w.stmt# = 27
27
5000
51 - PARENT*: stmt# - with clause (no results)
while w;
Select w such that Parent*(w, _) with w.stmt# = 4 and w.stmt# = 8
none
5000
52 - PARENT*: prog_line
prog_line n;
Select n such that Parent*(n, _)
4, 6, 8, 11, 14, 19, 21, 27, 28, 33, 34, 35, 36
5000
53 - PARENT*: stmt overflow
stmt s;
Select s such that Parent*(45, s)
none
5000
54 - PARENT*: stmt underflow
stmt s;
Select s such that Parent*(-1, s)
none
5000
55 - PARENT*: stmt underflow
variable s;
Select s such that Parent*(0, s)
none
5000
56 - PARENT*: invalid argument
assign a;
Select a such that Parent*(a, "helloworld")
none
5000
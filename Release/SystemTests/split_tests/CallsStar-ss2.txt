1 - CALLS*-boolean: fixed-fixed

Select BOOLEAN such that Calls*("proc1", "proc2")
true
5000
2 - CALLS*-proc: fixed-fixed (false)
procedure p;
Select p such that Calls*("proc2", "proc1")
none
5000
3 - CALLS*-proc: syn-syn (tuple)
procedure p1, p2;
Select <p1,p2> such that Calls*(p1, p2)
proc1 proc2, proc1 proc3, proc2 proc3
5000
4 - CALLS*-boolean: generic-generic

Select BOOLEAN such that Calls*(_, _)
true
5000
5 - CALLS*-proc: fixed-syn
procedure p;
Select p such that Calls*("proc1", p)
proc2, proc3
5000
6 - CALLS*-stmt: syn-fixed
stmt s; procedure p;
Select s such that Calls*(p, "proc3")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
7 - CALLS*-boolean: fixed-generic

Select BOOLEAN such that Calls*("proc2", _)
true
5000
8 - CALLS*-boolean: generic-fixed

Select BOOLEAN such that Calls*(_, "proc2")
true
5000
9 - CALLS*-while: syn-generic
while w; procedure p;
Select w such that Calls*(p, _)
4, 8, 11, 14, 21, 27, 36
5000
10 - CALLS*-if: generic-syn
if i; procedure p;
Select i such that Calls*(_, p)
6, 19, 28, 33, 34, 35
5000
11 - CALLS*: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Calls*("proc1", "proc2") and Calls*("proc1", "proc3")
true
5000
12 - CALLS*: 2 clauses (similar) - syn-syn, syn-syn
procedure p1, p2, p3;
Select p2 such that Calls*(p1, p2) and Calls*(p2, p3)
proc2
5000
13 - CALLS*: 2 clauses (similar) - fixed-syn, fixed-syn
procedure p;
Select p such that Calls*("proc1", p) and Calls*("proc2", p)
proc3
5000
14 - CALLS*: 2 clauses (similar) - syn-fixed, syn-fixed
procedure p;
Select p such that Calls*(p, "proc2") and Calls*(p, "proc3")
proc1
5000
15 - CALLS*: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Calls*("proc1", _) and Calls*("proc2", _)
true
5000
16 - CALLS*: 2 clauses (similar) - generic-fixed, generic-fixed

Select BOOLEAN such that Calls*(_, "proc2") and Calls*(_, "proc3")
true
5000
17 - CALLS*: 2 clauses (similar) - syn-generic, syn-generic
procedure p1, p2;
Select <p1,p2> such that Calls*(p1, _) and Calls*(p2, _)
proc1 proc1, proc1 proc2, proc2 proc1, proc2 proc2
5000
18 - CALLS*: 2 clauses (similar) - generic-syn, generic-syn
procedure p1, p2;
Select <p1,p2> such that Calls*(_, p1) and Calls*(_, p2)
proc2 proc2, proc2 proc3, proc3 proc2, proc3 proc3
5000
19 - CALLS*: 2 clauses (mixed) - fixed-fixed, fixed-syn
procedure p;
Select p such that Calls*("proc2", "proc3") and Calls*("proc1", p)
proc2, proc3
5000
20 - CALLS*: 2 clauses (mixed) - syn-syn, syn-fixed
procedure p1, p2;
Select p2 such that Calls*(p1, p2) and Calls*(p2, "proc3")
proc2
5000
21 - CALLS*: 2 clauses (mixed) - generic-generic, fixed-generic

Select BOOLEAN such that Calls*(_, _) and Calls*("proc3", _)
false
5000
22 - CALLS*: 2 clauses (mixed) - fixed-syn, generic-fixed
procedure p;
Select p such that Calls*("proc2", p) and Calls*(_, "proc2")
proc3
5000
23 - CALLS*: 2 clauses (mixed) - syn-fixed, syn-generic
procedure p1, p2;
Select p1 such that Calls*(p1, "proc3") and Calls*(p2, _)
proc1, proc2
5000
24 - CALLS*: 2 clauses (mixed) - fixed-generic, generic-syn
procedure p;
Select p such that Calls*("proc2", _) and Calls*(_, p)
proc2, proc3
5000
25 - CALLS*: 2 clauses (mixed) - generic-fixed, syn-generic
procedure p;
Select p such that Calls*(_, "proc1") and Calls*(p, _)
none
5000
26 - CALLS*: 2 clauses (mixed) - syn-generic, generic-syn
procedure p;
Select p such that Calls*(p, _) and Calls*(_, p)
proc2
5000
27 - CALLS*: 2 clauses (mixed) - generic-fixed, generic-syn
procedure p;
Select BOOLEAN such that Calls*(_, "proc3") and Calls*(_, p)
true
5000
28 - CALLS*: procName - select clause (has results)
procedure p;
Select p.procName such that Calls*(p, _)
proc1, proc2
5000
29 - CALLS*: procName - select clause (no results)
procedure p;
Select p.procName such that Calls*(p, "proc4")
none
5000
30 - CALLS*: procName - with clause (has results)
procedure p;
Select p such that Calls*(p, _) with p.procName = "proc2"
proc2
5000
31 - CALLS*: procName - with clause (no results)
procedure p;
Select p such that Calls*(_, p) with p.procName = "proc123"
none
5000
32 - CALLS: non-existent procedure
procedure p;
Select p such that Calls("proc4", p)
none
5000
33 - CALLS: non-existent procedure
procedure p;
Select p such that Calls(p, "proc5")
none
5000
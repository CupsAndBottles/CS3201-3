1 - PARENT-boolean: fixed-fixed (regular stmt)

Select BOOLEAN such that Parent(5, 6)
true
5000
2 - PARENT-stmt: fixed-fixed (while stmt)
stmt s;
Select s such that Parent(15, 17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
3 - PARENT-boolean: fixed-fixed (if stmt, if block)

Select BOOLEAN such that Parent(20, 21)
true
5000
4 - PARENT-boolean: fixed-fixed (fi stmt, else block)

Select BOOLEAN such that Parent(20, 22)
true
5000
5 - PARENT-stmt: fixed-fixed (false)
stmt s;
Select s such that Parent(14, 15)
none
5000
6 - PARENT-stmt: syn-syn (tuple)
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2)
5 6, 5 7, 5 8, 15 16, 15 17, 15 23, 17 18, 17 20, 18 19, 20 21, 20 22
5000
7 - PARENT-assign: syn-syn
stmt s; assign a;
Select a such that Parent(s, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
8 - PARENT-while: syn-syn
while w1, w2;
Select w1 such that Parent(w1, w2)
15, 17
5000
9 - PARENT-if: syn-syn
stmt s; if i;
Select i such that Parent(i, s)
20
5000
10 - PARENT-boolean: generic-generic

Select BOOLEAN such that Parent(_, _)
true
5000
11 - PARENT-assign: fixed-syn (while stmt)
assign a;
Select a such that Parent(17, a)
none
5000
12 - PARENT-stmt: fixed-syn (if stmt)
stmt s;
Select s such that Parent(20, s)
21, 22
5000
13 - PARENT-stmt: syn-fixed
stmt s;
Select s such that Parent(s, 19)
18
5000
14 - PARENT-while: syn-fixed
while w;
Select w such that Parent(w, 21)
none
5000
15 - PARENT-if: syn-fixed
if i;
Select i such that Parent(i, 22)
20
5000
16 - PARENT-boolean: fixed-generic

Select BOOLEAN such that Parent(14, _)
false
5000
17 - PARENT-boolean: generic-fixed

Select BOOLEAN such that Parent(_, 23)
true
5000
18 - PARENT-assign: syn-generic
assign a;
Select a such that Parent(a, _)
none
5000
19 - PARENT-while: syn-generic
while w;
Select w such that Parent(w, _)
5, 15, 17, 18
5000
20 - PARENT-if: syn-generic
if i;
Select i such that Parent(i, _)
20
5000
21 - PARENT-stmt: generic-syn
stmt s;
Select s such that Parent(_, s)
6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23
5000
22 - PARENT-assign: generic-syn
assign a;
Select a such that Parent(_, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
23 - PARENT-while: generic-syn
while w;
Select w such that Parent(_, w)
17, 18
5000
24 - PARENT-if: generic-syn
if i;
Select i such that Parent(_, i)
20
5000
25 - PARENT-while: pattern-left defined
while w;
Select w such that Parent(15, w) pattern w("battle2", _)
17
5000
26 - PARENT-while: pattern-left defined synonym
while w; variable v;
Select w such that Parent(15, w) pattern w(v, _)
17
5000
27 - PARENT-if: pattern-left defined
if i;
Select i such that Parent(i, 22) pattern i("squirtle", _, _)
none
5000
28 - PARENT-if: pattern-left defined synonym
if i; variable v;
Select i such that Parent(i, 21) pattern i(v, _, _)
20
5000
29 - PARENT: 2 clauses (similar) - fixed-fixed, fixed-fixed

Select BOOLEAN such that Parent(15, 17) and Parent(17, 18)
true
5000
30 - PARENT: 2 clauses (similar) - syn-syn, syn-syn
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2) and Parent(s2, s1)
none
5000
31 - PARENT: 2 clauses (similar) - fixed-syn, fixed-syn
stmt s;
Select s such that Parent(15, s) and Parent(17, s)
none
5000
32 - PARENT: 2 clauses (similar) - syn-fixed, syn-fixed
while w;
Select w such that Parent(15, w) and Parent(w, 18)
17
5000
33 - PARENT: 2 clauses (similar) - fixed-generic, fixed-generic

Select BOOLEAN such that Parent(5, _) and Parent(20, _)
true
5000
34 - PARENT: 2 clauses (similar) - generic-fixed, generic-fixed
stmt s
Select s such that Parent(_, 12) and Parent(_, 22)
none
5000
35 - PARENT: 2 clauses (similar) - syn-generic, syn-generic
while w; if i;
Select <i,w> such that Parent(w, _) and Parent(i, _)
20 5, 20 15, 20 17, 20 18
5000
36 - PARENT: 2 clauses (similar) - generic-syn, generic-syn
stmt s; if i;
Select i such that Parent(_, s) and Parent(_, i)
20
5000
37 - PARENT: 2 clauses (mixed) - fixed-fixed, fixed-syn
stmt s;
Select s such that Parent(15, 23) and Parent(20, s)
21, 22
5000
38 - PARENT: 2 clauses (mixed) - syn-syn, syn-fixed
stmt s1, s2;
Select <s1,s2> such that Parent(s1, s2) and Parent(s1, 18)
17 18, 17 20
5000
39 - PARENT: 2 clauses (mixed) - generic-generic, fixed-generic
while w;
Select w such that Parent(_, _) and Parent(20, _)
5, 15, 17, 18
5000
40 - PARENT: 2 clauses (mixed) - fixed-syn, generic-fixed
assign a;
Select a such that Parent(5, a) and Parent(_, 23)
6, 7, 8
5000
41 - PARENT: 2 clauses (mixed) - syn-fixed, syn-generic
if i; assign a;
Select  such that Parent(i, 22) and Parent(a, _)
none
5000
42 - PARENT: 2 clauses (mixed) - fixed-generic, generic-syn

Select BOOLEAN such that Parent(18, _) and Parent(_, 18)
true
5000
43 - PARENT: 2 clauses (mixed) - generic-fixed, syn-generic
stmt s;
Select s such that Parent(_, 16) and Parent(s, _)
5, 15, 17, 18, 20
5000
44 - PARENT: 2 clauses (mixed) - syn-generic, generic-syn
while w;
Select w such that Parent(w, _) and Parent(_, w)
17, 18
5000
45 - PARENT: 2 clauses (mixed) - generic-fixed, generic-syn
assign a;
Select a such that Parent(_, 21) and Parent(_, a)
6, 7, 8, 16, 19, 21, 22, 23
5000
46 - PARENT: stmt# - select clause (has results)
assign a;
Select a.stmt# such that Parent(15, a)
16, 23
5000
47 - PARENT: stmt# - select clause (no results)
assign a;
Select a.stmt# such that Parent(16, a)
none
5000
48 - PARENT: stmt# - with clause (has results)
while w;
Select w such that Parent(w, _) with w.stmt# = 15
15
5000
49 - PARENT: stmt# - with clause (no results)
while w;
Select w such that Parent(w, _) with w.stmt# = 15 and w.stmt# = 17
none
5000
50 - PARENT: prog_line
prog_line n;
Select n such that Parent(n, _)
5, 15, 17, 18, 20
5000
51 - PARENT: stmt overflow
stmt s;
Select s such that Parent(45, s)
none
5000
52 - PARENT: stmt underflow
stmt s;
Select s such that Parent(-1, s)
none
5000
53 - PARENT: stmt underflow
variable s;
Select s such that Parent(0, s)
none
5000
54 - PARENT: invalid argument
assign a;
Select a such that Parent(a, "helloworld")
none
5000